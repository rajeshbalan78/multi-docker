In the next lecture, we will be adding a client and worker service. There are two required configuration updates that need to be made:

1) When adding the "Client" service, be sure to include the stdin_open: true configuration:

  client:
    stdin_open: true
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
Otherwise, you will get a "React App exited with Code 0" error in your terminal when we attempt to start up the application.

2) When adding the "Worker" service, include the Redis host and port as environment variables:

  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
Otherwise, you will get a "Calculated Nothing Yet" error message.

CLIENT DOCKER FILE
FROM node:14.14.0-alpine
WORKDIR './app'
COPY ./package.json ./
RUN npm install start
COPY . .
CMD ["npm", "run", "start"]



NGINX CONFIG FILE
=================
server {
  listen 3000;
 
  location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
  }
}


The full deploy section will look like this:

deploy:
  provider: elasticbeanstalk
  region: 'us-east-1'
  app: 'multi-docker'
  env: 'MultiDocker-env'
  bucket_name: 'elasticbeanstalk-us-east-1-923445559289'
  bucket_path: 'docker-multi'
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY